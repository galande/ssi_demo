import type { RevocationRegistry } from './RevocationRegistry';
import type { JsonObject } from '../types';
import { AnoncredsObject } from '../AnoncredsObject';
import { Credential } from './Credential';
import { CredentialDefinition } from './CredentialDefinition';
import { CredentialRevocationState } from './CredentialRevocationState';
import { PresentationRequest } from './PresentationRequest';
import { RevocationRegistryDefinition } from './RevocationRegistryDefinition';
import { RevocationStatusList } from './RevocationStatusList';
import { Schema } from './Schema';
export type NonRevokedIntervalOverride = {
    revocationRegistryDefinitionId: string;
    requestedFromTimestamp: number;
    overrideRevocationStatusListTimestamp: number;
};
export type CredentialEntry = {
    credential: Credential | JsonObject;
    timestamp?: number;
    revocationState?: CredentialRevocationState | JsonObject;
};
export type CredentialProve = {
    entryIndex: number;
    referent: string;
    isPredicate: boolean;
    reveal: boolean;
};
export type RevocationEntry = {
    revocationRegistryDefinitionEntryIndex: number;
    entry: RevocationRegistry;
    timestamp: number;
};
export type CreatePresentationOptions = {
    presentationRequest: PresentationRequest | JsonObject;
    credentials: CredentialEntry[];
    credentialsProve: CredentialProve[];
    selfAttest: Record<string, string>;
    linkSecret: string;
    schemas: Record<string, Schema | JsonObject>;
    credentialDefinitions: Record<string, CredentialDefinition | JsonObject>;
};
export type VerifyPresentationOptions = {
    presentationRequest: PresentationRequest | JsonObject;
    schemas: Record<string, Schema | JsonObject>;
    credentialDefinitions: Record<string, CredentialDefinition | JsonObject>;
    revocationRegistryDefinitions?: Record<string, RevocationRegistryDefinition | JsonObject>;
    revocationStatusLists?: (RevocationStatusList | JsonObject)[];
    nonRevokedIntervalOverrides?: NonRevokedIntervalOverride[];
};
export declare class Presentation extends AnoncredsObject {
    static create(options: CreatePresentationOptions): Presentation;
    static fromJson(json: JsonObject): Presentation;
    verify(options: VerifyPresentationOptions): boolean;
}
